# General Description:  
# Any key that is specific for a plot type will begin with ts for timeseries, ty for taylor
# Opt: Specifying the variable or variable group is optional
# For now all plots except time series average over the analysis window. 
# Seting axis values - If set_axis = True in data_proc section of each plot_grp the yaxis for the plot will be set based on the values specified in the obs section for each variable. If set_axis is set to False, then defaults will be used. 'vmin_plot' and 'vmax_plot' are needed for 'timeseries', 'spatial_overlay', and 'boxplot'. 'vdiff_plot' is needed for 'spatial_bias' plots and'ty_scale' is needed for 'taylor' plots. 'nlevels' or the number of levels used in the contour plot can also optionally be provided for spatial_overlay plot. If set_axis = True and the proper limits are not provided in the obs section, a warning will print, and the plot will be created using the default limits.
analysis:
  start_time: '2019-07-22-00:00:00' #UTC
  end_time: '2019-09-05-23:59:00' #UTC
  output_dir: /wrk/charkins/melodies_monet/aircraft/develop_aircraft_looping/output # relative to the program using this control file
  debug: True
  read:
      paired:
          method: 'netcdf' # 'netcdf' or 'pkl'
          filenames: {'firexaq_wrfchem_v4.2':['/wrk/charkins/melodies_monet/aircraft/develop_aircraft_looping/output/0722_firexaq_wrfchem_v4.2.nc4',
          '/wrk/charkins/melodies_monet/aircraft/develop_aircraft_looping/output/0905_firexaq_wrfchem_v4.2.nc4']} # example for netcdf method. Uses dict of form {group1: str or iterable of filenames, group2:...}  Any wildcards will be expanded
          # filenames: {'airnow_wrfchem_v4.2':['0904_airnow_wrfchem_v4.2.nc4','0905_airnow_wrfchem_v4.2.nc4']} # example for netcdf method. Uses dict of form {group1: str or iterable of filenames, group2:...}
          # filenames: ['0904.pkl','0905.pkl'] # example for pkl method, uses str or iterable of filenames
      # models:
      # obs:
model:
  wrfchem_v4.2: # model label
    # files: /wrk/d2/rschwantes/wrf/firex_mech/qzhu/run_CONUS_fv19_BEIS_1.0xISO_RACM_v4.2.2_racm_berk_vcp_noI_phot_soa/0905/*
    #files: /wrk/qrasool/firex_mech_qzhu/run_CONUS_fv19_BEIS_1.0xISO_RACM_v4.2.2_racm_berk_vcp_noI_phot_soa/0905/* #/wrk/d2/rschwantes/wrf/firex_mech/qzhu/run_CONUS_fv19_BEIS_1.0xISO_RACM_v4.2.2_racm_berk_vcp_noI_phot_soa/0905/*
    files: '/wrk/charkins/melodies_monet/aircraft/develop_aircraft_looping/all_days_model/*'
    mod_type: 'wrfchem'
    mod_kwargs: 
      mech: 'racm_esrl_vcp'
    radius_of_influence: 12000 #meters
    mapping: #model species name : obs species name
      firexaq:
        no2: NO2_CL_RYERSON
        'no': 'NO_CL_RYERSON'
        #PM2_5_DRY: "PM2.5"
        o3: "O3_CL_RYERSON"
    variables:
        'pres_pa_mid':
            rename: pressure_model # name to convert this variable to, use 'pressure_model' for aircraft obs
            unit_scale: 1 #Opt Scaling factor 
            unit_scale_method: '*' #Opt Multiply = '*' , Add = '+', subtract = '-', divide = '/'
        'temperature_k':
            rename: temp_model # name to convert this variable to
            unit_scale: 1 #Opt Scaling factor 
            unit_scale_method: '*' #Opt Multiply = '*' , Add = '+', subtract = '-', divide = '/'
    projection: null
    plot_kwargs: #Opt
      color: 'dodgerblue'
      marker: '^'
      linestyle: ':' 
obs:
  firexaq: # obs label
    filename: '/wrk/d2/rschwantes/obs/firex-aq/R1/10s_merge/firexaq-mrg10-dc8_merge_20190905_R1.ict'
    obs_type: aircraft
    resample: '600S' #'600S' #10 min so works on Hera as a test. Can comment this if submitting a job. 
    variables: #Opt 
      'O3_CL_RYERSON':
        unit_scale: 1 #Opt Scaling factor 
        unit_scale_method: '*' #Opt Multiply = '*' , Add = '+', subtract = '-', divide = '/'
        nan_value: -777777 # Opt Set this value to NaN
        LLOD_value: -888888 # Opt Set this value to LLOD_setvalue
        LLOD_setvalue: 0.0 # Opt Set LLOD_value=LLOD_setvalue, applied AFTER unit_scale and obs_unit
        #ylabel_plot: 'Ozone (ppbv)'
        #vmin_plot: 15.0 #Opt Min for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
        #vmax_plot: 55.0 #Opt Max for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
        #vdiff_plot: 20.0 #Opt +/- range to use in bias plots. To apply to a plot, change restrict_yaxis = True.
        # nlevels_plot: 21 #Opt number of levels used in colorbar for contourf plot.
      'NO_CL_RYERSON':
        nan_value: -777777 # Set this value to NaN
        LLOD_value: -888888 # Opt Set this value to LLOD_setvalue
        LLOD_setvalue: 0.0 # Opt Set LLOD_value=LLOD_setvalue, applied AFTER unit_scale and obs_unit
        #ylabel_plot: 'NO (ppbv)' #Optional to set ylabel so can include units and/or instr etc.
        #vmin_plot: 0.0 #Opt Min for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
        #vmax_plot: 20.0 #Opt Max for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
        #vdiff_plot: 15.0 #Opt +/- range to use in bias plots. To apply to a plot, change restrict_yaxis = True.
        #nlevels_plot: 21 #Opt number of levels used in colorbar for contourf plot.
      'NO2_CL_RYERSON':
        nan_value: -777777 # Set this value to NaN
        LLOD_value: -888888 # Opt Set this value to LLOD_setvalue
        LLOD_setvalue: 0.0 # Opt Set LLOD_value=LLOD_setvalue, applied AFTER unit_scale and obs_unit
        #ylabel_plot: 'NO2 (ppbv)' #Optional to set ylabel so can include units and/or instr etc.
        #vmin_plot: 0.0 #Opt Min for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
        #vmax_plot: 20.0 #Opt Max for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
        #vdiff_plot: 15.0 #Opt +/- range to use in bias plots. To apply to a plot, change restrict_yaxis = True.
        #nlevels_plot: 21 #Opt number of levels used in colorbar for contourf plot.
      'Latitude_YANG':
            rename: latitude # name to convert this variable to
            unit_scale: 1 #Opt Scaling factor 
            unit_scale_method: '*' #Opt Multiply = '*' , Add = '+', subtract = '-', divide = '/'
      'Longitude_YANG':
            rename: longitude # name to convert this variable to
            unit_scale: 1 #Opt Scaling factor 
            unit_scale_method: '*' #Opt Multiply = '*' , Add = '+', subtract = '-', divide = '/'
      'P_BUI':
            rename: pressure_obs # name to convert this variable to
            unit_scale: 100 #Opt Scaling factor 
            unit_scale_method: '*' #Opt Multiply = '*' , Add = '+', subtract = '-', divide = '/'
      'MSL_GPS_Altitude_YANG':
          rename: altitude # name to convert this variable to
          unit_scale: 1 #Opt Scaling factor 
          unit_scale_method: '*' #Opt Multiply = '*' , Add = '+', subtract = '-', divide = '/'

plots:
  plot_grp1:
    type: 'timeseries' # plot type
    fig_kwargs: #Opt to define figure options
      figsize: [12,6] # figure size if multiple plots
    default_plot_kwargs: # Opt to define defaults for all plots. Model kwargs overwrite these.
      linewidth: 2.0
      markersize: 10.
    text_kwargs: #Opt
      fontsize: 18.
    domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.) 
    domain_name: ['CONUS'] #List of domain names. If domain_type = all domain_name is used in plot title.
    data: ['firexaq_wrfchem_v4.2'] # make this a list of pairs in obs_model where the obs is the obs label and model is the model_label
    data_proc:
      #See 'altitde_yax2' list below for secondary y-axis options
      #altitude_variable: altitude  
      #altitude_ticks: 1000  # Altitude tick interval in meters (for secondary y-axis for altitude (m))
      rem_obs_nan: True # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      ts_select_time: 'time' #Time used for avg and plotting: Options: 'time' for UTC or 'time_local'
      ts_avg_window: #'h' # pandas resample rule (e.g., 'h', 'D'). No averaging is done if ts_avg_window is null or not specified.
      set_axis: False #If select True, add vmin_plot and vmax_plot for each variable in obs.
      #vmin2, vmax2 filter not needed as filter_dict option added in 'altitude_yax2' to subset the paireddf as per altitude secondary-axis limits
      #vmin2: #0  #Optional
      #vmax2: #5000 #12000 #Optional #Subset limits for secondary y-axis (altitude_variable) 
      altitude_yax2:
        altitude_variable: altitude
        altitude_ticks: 1000
        ylabel2: Altitude (m)
        plot_kwargs_y2:
          color: g
        altitude_unit: m
        altitude_scaling_factor: 1
        #filter_dict: #Default is min and max if filter_dict doesn't define the options below (or if they are commented out)
        #  altitude:
        #    oper: "between"
        #    value: [2000,8000] # values are [vmin_y2, vmax_y2] 
