analysis:
  start_time: '2019-07-15'
  end_time:   '2019-07-16'
  debug: True
  output_dir: /Users/mengli/Work/melodies-monet/outdata
  output_dir_save: /Users/mengli/Work/melodies-monet/outdata/save_intermediate
  output_dir_read: /Users/mengli/Work/melodies-monet/outdata/read_intermediate
  save:
    paired:
      method: 'netcdf'
      prefix: '201907'
      data: all
  read:
    paired: 
      method: 'netcdf'
      filenames: 
        {tropomi_l2_no2_wrfchem_v4.2: ['201907_tropomi_l2_no2_wrfchem_v4.2.nc4']}

obs:
  tropomi_l2_no2:
    debug: True
    filename: /Users/mengli/Work/melodies-monet/obsdata/tropomi_no2/20190715/*
    #filename: /Volumes/Meng/TROPOMI/20190715/*
    obs_type: sat_swath_clm
    sat_type: tropomi_l2_no2
    variables:
        qa_value:
            quality_flag_min: 0.7
            var_applied: ['nitrogendioxide_tropospheric_column']
            fillvalue: 9.96921e+36
        nitrogendioxide_tropospheric_column:       
            scale: 6.022141e+19 # unit convert form mol_perm2to molec_percm2,6.022141e+19
            fillvalue: 9.96921e+36
            ylabel_plot: 'NO2 trop. columns'
            #ty_scale: 3.0 #opt
            vmin_plot: 0.0 # optMin for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
            vmax_plot: 1.0e+16
            #vdiff_plot: 15.0 # Opt +/- range to use in bias plots. To apply to a plot, change restrict_yaxis = True.
            nlevels_plot: 23  # Opt number of levels used in colorbar for contourf plot.
            regulatory: False
        averaging_kernel:
            fillvalue: 9.96921e+36
        air_mass_factor_total:
            fillvalue: 9.96921e+36
        air_mass_factor_troposphere:
            fillvalue: 9.96921e+36
        latitude: None 
        longitude: None 

        preslev: # pressure of the vertical layer center
            tm5_constant_a:    
                group: ['PRODUCT']
                maximum: 9.0e+36
            tm5_constant_b:
                group: ['PRODUCT']
                maximum: 9.0e+36
            surface_pressure:
                group: ['PRODUCT/SUPPORT_DATA/INPUT_DATA/']
                maximum: 9.0e+36
            tm5_tropopause_layer_index:
                group: ['PRODUCT']
        #latitude_bounds:
        #    group: ['PRODUCT/SUPPORT_DATA/GEOLOCATIONS/'] 
        #longitude_bounds:
        #   group: ['PRODUCT/SUPPORT_DATA/GEOLOCATIONS/']

model:
  wrfchem_v4.2: 
    files: /Users/mengli/Work/melodies-monet/modeldata/wrfchem/0715/*
    #files: /Volumes/Meng/WRF_Chem/0715/*
    mod_type: 'wrfchem'
    apply_ak: True
    mod_kwargs: 
      mech: 'racm_esrl_vcp'
    mapping: #model species name : obs species name
      tropomi_l2_no2:
        no2: nitrogendioxide_tropospheric_column
    projection: ~
    plot_kwargs: #Opt
      color: 'dodgerblue'
      marker: '^'
      linestyle: ':' 

plots:
  plot_grp1:
    type: 'timeseries' # plot type
    fig_kwargs: #Opt to define figure options
      figsize: [12,6] # figure size if multiple plots
    default_plot_kwargs: # Opt to define defaults for all plots. Model kwargs overwrite these.
      linewidth: 2.0
      markersize: 10.
    text_kwargs: #Opt
      fontsize: 18.
    domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.) 
    domain_name: ['CONUS'] #List of domain names. If domain_type = all domain_name is used in plot title.
    data: ['tropomi_l2_no2_wrfchem_v4.2'] # make this a list of pairs in obs_model where the obs is the obs label and model is the model_label
    data_proc:
      #See 'altitde_yax2' list below for secondary y-axis options
      #altitude_variable: altitude  
      #altitude_ticks: 1000  # Altitude tick interval in meters (for secondary y-axis for altitude (m))
      rem_obs_nan: True # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      ts_select_time: 'time' #Time used for avg and plotting: Options: 'time' for UTC or 'time_local'
      ts_avg_window:  'H'# pandas resample rule (e.g., 'H', 'D'). No averaging is done if ts_avg_window is null or not specified.
      set_axis: False #If select True, add vmin_plot and vmax_plot for each variable in obs.
      #vmin2, vmax2 filter not needed as filter_dict option added in 'altitude_yax2' to subset the paireddf as per altitude secondary-axis limits
      #vmin2: #0  #Optional
      #vmax2: #5000 #12000 #Optional #Subset limits for secondary y-axis (altitude_variable) 
  plot_grp2:
    type: 'gridded_spatial_bias' # plot type
    fig_kwargs: #For all spatial plots, specify map_kwargs here too.
      states: True
      figsize: [10, 5] # figure size 
    text_kwargs: #Opt
      fontsize: 16.
    domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.) 
    domain_name: ['CONUS'] #List of domain names. If domain_type = all domain_name is used in plot title.
    data: ['tropomi_l2_no2_wrfchem_v4.2'] # make this a list of pairs in obs_model where the obs is the obs label and model is the model_label
    data_proc:
      #filter_dict: {'state_name':{'value':['CA','NY'],'oper':'isin'},'WS':{'value':1,'oper':'<'}}
      #filter_string: state_name in ['CA','NY'] and WS < 1 #  Uses pandas query method.
      #rem_obs_by_nan_pct: {'group_var': 'siteid','pct_cutoff': 25,'times':'hourly'} # Groups by group_var, then removes all instances of groupvar where obs variable is > pct_cutoff % nan values
      rem_obs_nan: True # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      set_axis: True #If select True, add vdiff_plot for each variable in obs.
  plot_grp3:
    type: 'taylor' # plot type
    fig_kwargs: #Opt to define figure options
      figsize: [8,8] # figure size if multiple plots
    default_plot_kwargs: # Opt to define defaults for all plots. Model kwargs overwrite these.
      markersize: 10.
    text_kwargs: #Opt
      fontsize: 16.
    domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.) 
    domain_name: ['CONUS'] #List of domain names. If domain_type = all domain_name is used in plot title.
    data: ['tropomi_l2_no2_wrfchem_v4.2'] # make this a list of pairs in obs_model where the obs is the obs label and model is the model_label
    data_proc:
      #filter_dict: {'state_name':{'value':['CA','NY'],'oper':'isin'},'WS':{'value':1,'oper':'<'}}
      #filter_string: state_name in ['CA','NY'] and WS < 1 #  Uses pandas query method.
      #rem_obs_by_nan_pct: {'group_var': 'siteid','pct_cutoff': 25,'times':'hourly'} # Groups by group_var, then removes all instances of groupvar where obs variable is > pct_cutoff % nan values
      rem_obs_nan: True # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      set_axis: False #If select True, add ty_scale for each variable in obs.
  plot_grp4:
    type: 'boxplot' # plot type
    fig_kwargs: 
      figsize: [8, 6] # figure size 
    default_plot_kwargs: # Opt to define defaults for all plots. Model kwargs overwrite these.
      markersize: 10.
    text_kwargs: #Opt
      fontsize: 20.
    domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.) 
    domain_name: ['CONUS'] #List of domain names. If domain_type = all domain_name is used in plot title.
    data: ['tropomi_l2_no2_wrfchem_v4.2'] # make this a list of pairs in obs_model where the obs is the obs label and model is the model_label
    data_proc:
      #filter_dict: {'state_name':{'value':['CA','NY'],'oper':'isin'},'WS':{'value':1,'oper':'<'}}
      #filter_string: state_name in ['CA','NY'] and WS < 1 #  Uses pandas query method.
      #rem_obs_by_nan_pct: {'group_var': 'siteid','pct_cutoff': 25,'times':'hourly'} # Groups by group_var, then removes all instances of groupvar where obs variable is > pct_cutoff % nan values
      rem_obs_nan: True # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      set_axis: True #If select True, add vmin_plot and vmax_plot for each variable in obs.

stats:
  #Stats require positive numbers, so if you want to calculate temperature use Kelvin!
  stat_list: ['MB','NMB', 'R2', 'RMSE'] #List stats to calculate. Dictionary of definitions included in plots/proc_stats.py Only stats listed below are currently working.
  #Full calc list ['STDO', 'STDP', 'MdnNB','MdnNE','NMdnGE', 'NO','NOP','NP','MO','MP', 'MdnO', 'MdnP', 'RM', 'RMdn', 'MB', 'MdnB', 'NMB', 'NMdnB', 'FB', 'ME','MdnE','NME', 'NMdnE', 'FE', 'R2', 'RMSE','d1','E1', 'IOA', 'AC']
  round_output: 2 #Opt, defaults to rounding to 3rd decimal place.
  output_table: True #Always outputs a .txt file. Optional to also output as a table.
  output_table_kwargs: #Opt
    figsize: [12, 6] # figure size
    fontsize: 12.
    xscale: 1.4
    yscale: 1.4
    edges: 'horizontal'
  domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.)
  domain_name: ['CONUS'] #List of domain names. If domain_type = all domain_name is used in plot title.
  data: ['tropomi_l2_no2_wrfchem_v4.2'] # make this a list of pairs in obs_model where the obs is the obs labeland model is the model_label

