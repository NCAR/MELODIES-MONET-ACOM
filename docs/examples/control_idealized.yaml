analysis:
  start_time: "2019-09-09 00:00"
  end_time: "2019-09-10 00:00"
  output_dir: ./output/idealized
  # output_dir_save:  # defaults to `output_dir`
  # output_dir_read:  # defaults to `output_dir`
  debug: True
  save:
    paired:
      method: 'netcdf' # 'netcdf' or 'pkl'
      prefix: 'asdf' # use only with method=netcdf; don't set if you don't want a fn prefix
      # output_name: '0905.pkl' # use only with method=pkl
      data: 'all'
      # ^ 'all' to save out all pairs or
      #   ['pair1','pair2',...] to save out specific pairs.
      #   With method='pkl' this is ignored and always saves all.
    # models:
    # obs:
  read:
    paired:
      method: 'netcdf' # 'netcdf' or 'pkl'
      filenames:
        test_obs_test_model: 'asdf_test_obs_test_model.nc4'
      # filenames: ['0904.pkl','0905.pkl'] # example for pkl method, uses str or iterable of filenames
    # models:
    # obs:

model:
  test_model:
    files: test_model.nc
    mod_type: random
    variables:
      A:
        units: "Units of A"
        unit_scale: 1
        unit_scale_method: "*"
      B:
        units: "Units of B"
        unit_scale: 1
        unit_scale_method: "*"
    mapping:
      test_obs:
        A: "A_obs"
        B: "B_obs"
    projection: ~  # unused

obs:
  test_obs:
    # use_airnow: True
    filename: test_obs.nc
    obs_type: pt_sfc

plots:
  plot_grp1:
    type: 'timeseries'
    default_plot_kwargs:  # required (with at least one key)
      linewidth: 2.0
    domain_type: ['all']  # required
    domain_name: ['CONUS']  # required
    data: ['test_obs_test_model']  # required
    data_proc:  # These four seem to be required for time series
      rem_obs_nan: True  # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      ts_select_time: 'time'  # 'time' for UTC or 'time_local'
      ts_avg_window: '3h'  # Options: None for no averaging or list pandas resample rule (e.g., 'h', 'D')
      # ^ TODO: null setting seems not working
      set_axis: False  # If True, add vmin_plot and vmax_plot for each variable in obs.

  plot_grp2:
    type: 'spatial_overlay'
    fig_kwargs:
      states: True
      figsize: [10, 5]
    domain_type: ['all']  # required
    domain_name: ['CONUS']  # required
    data: ['test_obs_test_model']  # required
    data_proc:
      rem_obs_nan: True
      set_axis: True
