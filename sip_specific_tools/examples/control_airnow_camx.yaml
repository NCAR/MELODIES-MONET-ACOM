# General Description:
# - Any key that is specific for a plot type will begin with `ts` for timeseries, `ty` for taylor.
# - Some keys/groups are optional.
# - For now, all plots except time series average over the analysis window.
# - Setting axis values
#   - If set_axis = True in data_proc section of each plot_grp,
#     the yaxis for the plot will be set based on the values
#     specified in the obs section for each variable.
#   - If set_axis is set to False, then defaults will be used.
#   - 'vmin_plot' and 'vmax_plot' are needed for
#     'timeseries', 'spatial_overlay', and 'boxplot'.
#   - 'vdiff_plot' is needed for 'spatial_bias' plots
#   - 'ty_scale' is needed for 'taylor' plots.
#   - 'nlevels' or the number of levels used in the contour plot can also optionally be provided for spatial_overlay plot.
#   - If set_axis = True and the proper limits are not provided in the obs section,
#     a warning will print, and the plot will be created using the default limits.
analysis:
  start_time: "2022-07-20-00:00:00" # UTC
  end_time: "2022-07-20-23:00:00" # UTC
  output_dir: ./output/airnow # relative to the program using this control file
  #   Currently, the directory must exist or plot saving will error and fail.
  debug: True
  save:
    paired:
      output_dir_save: .
      method: netcdf
      data: 'all'
  read:
    paired:
      method: netcdf
      filenames: {'airnow_camx': 'airnow_camx.nc4'}
      

model:
  camx:
    files: /glade/work/plichtig/camx/processors/wrfcamx_v5.2/camx_input/CAMx73.cb7r1_cf3.20220720.35.camx.avrg.grd03.nc
    mod_type: "camx"
    surf_ony: True
    radius_of_influence: 12000
    mapping:
      airnow:
        O3: "OZONE"
        NO2: "NO2"
    projection: ~

obs:
  airnow: # obs label
    use_airnow: True
    filename: /glade/work/plichtig/Data/AirNow_20220720_20220721.nc
    obs_type: pt_sfc
    variables: # optional
      OZONE: 
        # unit_scale: 1
        # # ^ optional; Scaling factor
        # unit_scale_method: "*"
        # # ^ optional; Multiply = '*' , Add = '+', subtract = '-', divide = '/'
        # nan_value: -1.0
        # # ^ optional; When loading data, set this value to NaN
        ylabel_plot: "O$_3$ (ppbv)"
        # # optional; set ylabel in order to include units and/or other info
        # vmin_plot: 30.0
        # # ^ optional; Min for y-axis during plotting.
        # #   To apply to a plot, change restrict_yaxis = True.
        # vmax_plot: 70.0
        # # ^ optional; Max for y-axis during plotting.
        # #   To apply to a plot, change restrict_yaxis = True.
        # vdiff_plot: 30.0
        # # ^ optional; +/- range to use in bias plots.
        # #   To apply to a plot, change restrict_yaxis = True.
        # nlevels_plot: 21
        # # ^ optional; number of levels used in colorbar for contourf plot.
        # #percentile_opt: 95 #Opt, 5, 50, 95, etc. If not specified, simply calculate mean values. Currently used for "spatial_bias".
      NO2: 
        ylabel_plot: "NO$_2$ (ppbv)"
      

plots:
  plot_grp1:
    type: "timeseries" # plot type
    fig_kwargs: # optional; to define figure options
      figsize: [12, 6] # figure size (width, height) in inches
    default_plot_kwargs:
      # ^ optional; Define defaults for all plots.
      #   Important: Model kwargs overwrite these.
      linewidth: 2.0
      markersize: 10.
    text_kwargs: # optional
      fontsize: 24.
    domain_type: ["state_name"]
    # ^ List of domain types: 'all' or any domain in obs file.
    #   (e.g., airnow: epa_region, state_name, siteid, etc.)
    domain_name: ["CO"]
    # ^ List of domain names. If domain_type = all,
    #   the domain name is used in the plot title.
    data: ["airnow_camx"]
    # ^ make this a list of pairs in obs_model
    #   where the obs is the obs label and model is the model_label
    data_proc: # optional??
      rem_obs_nan: True
      # ^ True: Remove all points where model or obs variable is NaN.
      #   False: Remove only points where model variable is NaN.
      ts_select_time: "time"  # `ts_` indicates this is time series plot-specific
      # ^ Time used for avg and plotting
      #   Options: 'time' for UTC or 'time_local'
      ts_avg_window: "h"
      # ^ Options: None for no averaging, pandas resample rule (e.g., 'h', 'D')
      set_axis: True
      # ^ If true, add `vmin_plot` and `vmax_plot` for each variable in obs.

  plot_grp2:
    type: "taylor"
    fig_kwargs:
      figsize: [8, 8]
    default_plot_kwargs:
      linewidth: 2.0
      markersize: 10.
    text_kwargs:
      fontsize: 16.
    domain_type: ["state_name"]
    domain_name: ["CO"]
    data: ["airnow_camx"]
    data_proc:
      rem_obs_nan: True
      set_axis: True

  plot_grp3:
    type: "spatial_bias"
    fig_kwargs: # optional; For all spatial plots, specify map_kwargs here too.
      states: True  # such as whether to show the state boundaries
      figsize: [10, 5]
    text_kwargs:
      fontsize: 16.
    domain_type: ["state_name",]
    domain_name: ["CO"]
    data: ["airnow_camx"]
    data_proc:
      rem_obs_nan: True
      set_axis: True

  plot_grp4:
    type: "spatial_overlay"
    fig_kwargs:
      states: True
      counties: True
      figsize: [10, 5]
      extent: [-109, -101, 36, 41]
    text_kwargs:
      fontsize: 16.
    domain_type: ["state_name"]
    domain_name: ["CO"]
    data: ["airnow_camx"]
    data_proc:
      rem_obs_nan: True
      set_axis: True

  plot_grp5:
    type: "boxplot"
    fig_kwargs:
      figsize: [8, 6]
    text_kwargs:
      fontsize: 20.
    domain_type: ["state_name"]
    domain_name: ["CO"]
    data: ["airnow_camx"]
    data_proc:
      rem_obs_nan: True
      set_axis: False


#Scorecard plots are not yet available for reg options
#  plot_grp6:
#    type: "scorecard"
#    fig_kwargs:
#      figsize: [15, 10]
#    text_kwargs:
#      fontsize: 20.
#    domain_type: ["all"]
#    domain_name: ["CONUS"]
#    region_name: ['epa_region']
#    region_list: ['R1','R2','R3','R4','R5','R6','R7','R8','R9','R10']
#    urban_rural_name: ['msa_name']
#    urban_rural_differentiate_value: ''
#    better_or_worse_method: 'NME'    #support 'RMSE', 'IOA' ,' NMB', 'NME'
#    model_name_list: ['AirNow','RACM_ESRL','RACM_ESRL_VCP']
#    data: ["airnow_RACM_ESRL", "airnow_RACM_ESRL_VCP"]
#    data_proc:
#      rem_obs_nan: True
#      set_axis: False

stats:
  # Stats require positive numbers, so if you want to calculate temperature use Kelvin!
  # Wind direction has special calculations for AirNow if obs name is 'WD'
  stat_list: ["MB", "MdnB", "R2", "RMSE"]
  # ^ List stats to calculate. Dictionary of definitions included
  #   in submodule `plots/proc_stats`. Only stats listed below are currently working.
  #   Full calc list:
  #   ['STDO', 'STDP', 'MdnNB','MdnNE','NMdnGE',
  #    'NO', 'NOP', 'NP', 'MO', 'MP', 'MdnO', 'MdnP',
  #    'RM', 'RMdn', 'MB', 'MdnB', 'NMB', 'NMdnB', 'FB',
  #    'ME','MdnE','NME', 'NMdnE', 'FE', 'R2', 'RMSE','d1',
  #    'E1', 'IOA', 'AC']
  round_output: 2 # optional; defaults to rounding to 3rd decimal place
  output_table: False
  # ^ Always outputs a .txt file.
  #   Optional to also output a Matplotlib figure table (image).
  output_table_kwargs: # optional
    figsize: [7, 3]
    fontsize: 12.
    xscale: 1.4
    yscale: 1.4
    edges: "horizontal"
  domain_type: ["state_name"]
  domain_name: ["CO"]
  data: ["airnow_camx"]
